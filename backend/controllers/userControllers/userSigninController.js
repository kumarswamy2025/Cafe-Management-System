// importing data base
const connectDB=require('../../connectDB');
// importing jwt token module
const jwt=require('jsonwebtoken');
// importing dotenv and configuring here
require('dotenv').config()

async function  UserSignInController(req,res) {
    try {
        
        const userData=req.body;
        

        // this query is used to fetch data from DB based on the email
         const gettingUserData="select email,password,role,status,name, contactnumber from user where email=?"
   
          connectDB.query(gettingUserData,[userData.email],(err,result)=>{

            /**
             * (err, result): A callback function that handles the outcome of the query:
             * err: Contains an error object if something went wrong during the query execution.
             * result: Contains the query's output when it executes successfully.
             * result will be an array of rows matching the query.
             * If no rows match, result will be an empty array ([]).
             */

            // checking if there is any error 
            if(!err){

                // checking if user details  is available in our data base

                if(result.length<=0){

                    return res.status(500).json({
                        message:"you dont have an account for this email address please register now ",
                        success:false,
                        error:true
                    })



                }
                // checking password is correct or not
                else if(result[0].password!=userData.password){
                    return res.status(500).json({
                        message:"entered password is not correct please enter the correct password",
                        success:false,
                        error:true
                    })

                }

                //  if password is correct then generate JWT token
                else if(result[0].password ==userData.password){
                    // generate jwt tokens

                    // payload data of  jwt token
                    const payload={email:result[0].email,role:result[0].role};
                    // creating token 
                    const accessToken=jwt.sign(payload,process.env.ACCESS_TOKEN,{expiresIn:'8h',algorithm:'HS256',header:{'name':result[0].name,'UserEmail':result[0].email}})


                    // console.log("access token generated by jwt",accessToken);

                    
                    
                    

                    return res.status(201).json({
                        message:"User logedIn Successfully ",
                        success:true,
                        error:false,
                        tokenData:accessToken,
                        data:result

                    })


                    

                }

                // chcking status 
                else if(result[0].status=== 'false'){
                    return res.status(201).json({
                        message:"wait for Admin approval",
                        success:false,
                        error:true
                    })
                }
                // default case

                else{
                    return res.status(201).json({
                        message:"Something went wrong please try again",
                        success:false,
                        error:true
                    })

                }


            }


            else{

                return res.status(400).json({
                    message:"there is error in userSignInController please check once...",
                    success:false,
                    error:true
                })

            }

            

         
            
        


            

          })



        
        

    } catch (error) {
         return res.status(400).json({
                    message:"there is error in userSignInController please check once...",
                    success:false,
                    error:true,
                    errorDetails:error
                })
    }
    
}

module.exports=UserSignInController;